                                                              Базовые типы данных в Python
Название	      .      Описание	                   .                 Пример	                         .      Нет
int	            .        Целое число	             .    33                                           .      Нет
float	          .        Число с плавающей точкой  .    2.48	                                       .      Нет
str	            .        Строка	                   .    “ vasya”, ‘Петя’	                           .      Нет
list	      	  .        Список                    .    [1, 2, ‘Петя’, [“a”, “b”], 6, 3.14]	         .      Да
tuple	      	  .        Кортеж                    .    (1, 2, ‘Петя’, [“a”, “b”], 6, 3.14)	         .      Нет
dict	       	  .        Словарь                   .    {“a”: 1, “b”: “string”, “c”: [1, 2, 3]}	     .      Да
set	        	  .        Множество                 .    {1, 4, “c”, 8}	                             .      Да
bool	      	  .        Булевый                   .    True, False	                                 .      Нет
............................................................................................................................................

+	сложение                          .              ==	равно                  .        Десятичная	–1234, 0, 1234
-	вычитание                         .              !=	не равно               .        Двоичная	–0b10011010010, 0b0, 0b10011010010
*	умножение                         .              <	меньше                 .        Восьмеричная	–0o2322, 0o0, 0o2322
/	деление                           .              >	больше                 .        Шестнадцатеричная	–0x4d2, 0x0, 0x4d2
//	целочисленное деление           .              <=	меньше либо равно      .
%	остаток от деления                .              >=	больше либо равно      .
**	возведение в степень            .                                        .
.............................................................................................................................................
https://docs.python.org/3/library/stdtypes.html#str.isalnum
.............................................................................................................................................
index():                                  поиск позиции подстроки методом
 <<<text = "12435514234 ERROR index: big_terrible_mistake message: Ай, случилася беда!"

    template = 'message: '
    index = text.index(template)
    print(text[index + len(template):])

find()                                    поиск позиции подстроки методом
<<< text = "5423534 lajksdfij;jhh абракадабра dfasdfs9d6f7686"

    template = 'message: '
    index = text.find(template)
    if index != -1:
        print(text[index + len(template):])

in:                                       проверка на вхождение. Речь об операторе
<<< text = "12435514234 ERROR index: big_terrible_mistake message: Ай, случилася беда!"
    template = 'message: '
    if template in text:
        index = text.index(template)
        print(text[index + len(template):])

count()                                   Подсчёт числа вхождений
    >>> "абракадабра".count("а")
    5

startswith()                              Первый проверяет, начинается ли строка с того, что мы ожидаем
    >>> "_name".startswith("_")
    True

    name = "internal_attr_2"
    if not name.startswith("_"):
        print(name)
endswith()                                заканчивается ли она тем, чем нужно.
    >>> word = "мышь"

    if word.endswith("ь"):
    print("Это существительное женского рода:", word)

islower()                                 проверяет, все ли символы строки являются строчными:
    >>> "abcde".islower()
    True

isupper()                                 проверяет, все ли символы строки являются прописными:
    >>> "ABC".isupper()
    True

istitle()     проверяет, начинается ли строка с заглавной буквы и следуют ли за ней строчные:
    >>> "Незнайка".istitle()
    True

isnumeric()                               проверяет, состоит ли представленная строка только из цифр:
    >>> "12345".isnumeric()
    True

isalpha()                                 проверяет, наоборот, не содержит ли строка чего-либо помимо букв алфавита (любого):
    >>> "абвгдсCDEF".isalpha()
    True

split()                                   который позволяет разбивать строку на части,
    >>> "А роза упала на лапу Азора".lower().split("а")
    ['', ' роз', ' уп', 'л', ' н', ' л', 'пу ', 'зор', '']

removesuffix():                           ищет конкретную последовательность в начале строки и удаляет её
    >>> "авбвааббв Три слона на баобабе бббаааввв".removeprefix("абв")
    'авбвааббв Три слона на баобабе бббаааввв'

lower()                                   делает буквы меньше 
    >>> "пРивЕт от пАдоНкаФФ".lower()
    'привет от падонкафф'

casefold()                                Он возвращает все символы Юникода в виде, подходящем для сравнения, и это не всегда просто маленькие буквы
    >>> "а" == "А".casefold()
    True

    >>> "Фраза с БОЛЬШИМИ буквами".casefold()
    'фраза с большими буквами'

upper()                                   превращающий все буквы строки в прописные:
    >>> "Отдай мой пирожок!".upper()
    'ОТДАЙ МОЙ ПИРОЖОК!'

replace()                                 Он позволяет заменить все вхождения указанной строки на любую другую:
    >>> "У коня четыре ноги, а у машины - четыре колеса".replace("четыре", "4")
    'У коня 4 ноги, а у машины - 4 колеса'

join()                                    cоединяет элементы списка в одну строку, добавляя указанный разделитель
    >>> splitted = "Вася нехороший человек занял три рубля и отказывается отдавать!".split()
    >>> ", блин, ".join(splitted)
    'Вася, блин, нехороший, блин, человек, блин, занял, блин, три, блин, рубля, блин, и, блин, отказывается, блин, отдавать!'
format()                                   используется для форматирования строк. Он позволяет вставлять значения в строки, используя фигурные скобки {} как плейсхолдеры для значений.
    >>> "Пробег автомобиля с госномером {} составляет {} километров.".format("Л666АЙ77", 30000)
    'Пробег автомобиля с госномером Л666АЙ77 составляет 30000 километров.'

    >>> "A {1} has {0} legs and a {2} has {0} legs. So what's the difference between a {1} and a {2}?".format(4, "cat", "dog")
    "A cat has 4 legs and a dog has 4 legs. So what's the difference between a cat and a dog?"

len()                                        считает строки 
       a = "12312"
      print(len(a))
     Ответ 5

input()                                      вводить текст
   name = input("Введите ваше имя: ")
    print(f"Приветствую, {name}!")

end                                          чтобы управлять тем, что выводится в конце строки
    print("Эта строка плавно переходит", end="")
    print(" в следующую строку.")

sep                                          позволяет указать строку
 print(1, 2, 3, 4, 5, 6, 7, sep = "|")
  1|2|3|4|5|6|7

round()                                       Округляет

bin()                                         работает только с целыми числами


